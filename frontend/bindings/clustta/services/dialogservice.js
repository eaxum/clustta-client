// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call, Create as $Create} from "@wailsio/runtime";

/**
 * @param {string} title
 * @param {string} filters
 * @returns {Promise<string> & { cancel(): void }}
 */
export function SelectFileDialog(title, filters) {
    let $resultPromise = /** @type {any} */($Call.ByID(3383516309, title, filters));
    return $resultPromise;
}

/**
 * @returns {Promise<string[]> & { cancel(): void }}
 */
export function SelectFilesDialog() {
    let $resultPromise = /** @type {any} */($Call.ByID(614873094));
    let $typingPromise = /** @type {any} */($resultPromise.then(($result) => {
        return $$createType0($result);
    }));
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

/**
 * @param {string} title
 * @returns {Promise<string> & { cancel(): void }}
 */
export function SelectFolderDialog(title) {
    let $resultPromise = /** @type {any} */($Call.ByID(1248956583, title));
    return $resultPromise;
}

/**
 * @returns {Promise<string> & { cancel(): void }}
 */
export function SelectIconDialog() {
    let $resultPromise = /** @type {any} */($Call.ByID(1084525214));
    return $resultPromise;
}

/**
 * @returns {Promise<string[]> & { cancel(): void }}
 */
export function SelectItemsDialog() {
    let $resultPromise = /** @type {any} */($Call.ByID(2162344469));
    let $typingPromise = /** @type {any} */($resultPromise.then(($result) => {
        return $$createType0($result);
    }));
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

/**
 * @param {string} title
 * @param {string} defaultPath
 * @returns {Promise<string> & { cancel(): void }}
 */
export function SelectSpecificFolderDialog(title, defaultPath) {
    let $resultPromise = /** @type {any} */($Call.ByID(4244729795, title, defaultPath));
    return $resultPromise;
}

// Private type creation functions
const $$createType0 = $Create.Array($Create.Any);
