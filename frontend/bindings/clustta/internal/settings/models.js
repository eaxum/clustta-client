// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as models$0 from "../server/models/models.js";

export class Studio {
    /**
     * Creates a new Studio instance.
     * @param {Partial<Studio>} [$$source = {}] - The source object to create the Studio.
     */
    constructor($$source = {}) {
        if (!("id" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["id"] = "";
        }
        if (!("name" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["name"] = "";
        }
        if (!("active" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["active"] = "";
        }
        if (!("alt_url" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["alt_url"] = "";
        }
        if (!("url" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["url"] = "";
        }
        if (!("usage" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["usage"] = "";
        }
        if (!("Users" in $$source)) {
            /**
             * @member
             * @type {models$0.StudioUserInfo[]}
             */
            this["Users"] = [];
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Studio instance from a string or object.
     * @param {any} [$$source = {}]
     * @returns {Studio}
     */
    static createFrom($$source = {}) {
        const $$createField6_0 = $$createType1;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("Users" in $$parsedSource) {
            $$parsedSource["Users"] = $$createField6_0($$parsedSource["Users"]);
        }
        return new Studio(/** @type {Partial<Studio>} */($$parsedSource));
    }
}

// Private type creation functions
const $$createType0 = models$0.StudioUserInfo.createFrom;
const $$createType1 = $Create.Array($$createType0);
