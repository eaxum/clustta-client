// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call, Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as sync_service$0 from "../internal/repository/sync_service/models.js";

/**
 * @returns {Promise<void> & { cancel(): void }}
 */
export function CancelSync() {
    let $resultPromise = /** @type {any} */($Call.ByID(3809534217));
    return $resultPromise;
}

/**
 * @param {string} projectUri
 * @param {string} studioName
 * @param {string} workingDir
 * @param {sync_service$0.SyncOptions} syncOptions
 * @returns {Promise<void> & { cancel(): void }}
 */
export function CloneProject(projectUri, studioName, workingDir, syncOptions) {
    let $resultPromise = /** @type {any} */($Call.ByID(2124243758, projectUri, studioName, workingDir, syncOptions));
    return $resultPromise;
}

/**
 * @param {string} projectPath
 * @param {string} remoteURL
 * @param {string} checkpointId
 * @returns {Promise<void> & { cancel(): void }}
 */
export function DownloadCheckpoint(projectPath, remoteURL, checkpointId) {
    let $resultPromise = /** @type {any} */($Call.ByID(1678911334, projectPath, remoteURL, checkpointId));
    return $resultPromise;
}

/**
 * @param {string} projectPath
 * @returns {Promise<boolean> & { cancel(): void }}
 */
export function IsUnsynced(projectPath) {
    let $resultPromise = /** @type {any} */($Call.ByID(3101278405, projectPath));
    return $resultPromise;
}

/**
 * @param {string} projectPath
 * @param {string} remoteURL
 * @param {boolean} pullChunk
 * @param {sync_service$0.SyncOptions} syncOptions
 * @returns {Promise<void> & { cancel(): void }}
 */
export function PullData(projectPath, remoteURL, pullChunk, syncOptions) {
    let $resultPromise = /** @type {any} */($Call.ByID(1246471551, projectPath, remoteURL, pullChunk, syncOptions));
    return $resultPromise;
}

/**
 * @param {string} projectPath
 * @param {string} remoteURL
 * @returns {Promise<void> & { cancel(): void }}
 */
export function PullLatestCheckpoints(projectPath, remoteURL) {
    let $resultPromise = /** @type {any} */($Call.ByID(2298592963, projectPath, remoteURL));
    return $resultPromise;
}

/**
 * @param {string} projectPath
 * @param {string} remoteURL
 * @param {boolean} pullChunk
 * @param {sync_service$0.SyncOptions} syncOptions
 * @returns {Promise<void> & { cancel(): void }}
 */
export function PushCheckpoints(projectPath, remoteURL, pullChunk, syncOptions) {
    let $resultPromise = /** @type {any} */($Call.ByID(2506387659, projectPath, remoteURL, pullChunk, syncOptions));
    return $resultPromise;
}

/**
 * @param {string} projectPath
 * @param {string} remoteURL
 * @param {boolean} pullChunk
 * @param {sync_service$0.SyncOptions} syncOptions
 * @returns {Promise<void> & { cancel(): void }}
 */
export function SyncData(projectPath, remoteURL, pullChunk, syncOptions) {
    let $resultPromise = /** @type {any} */($Call.ByID(1941684635, projectPath, remoteURL, pullChunk, syncOptions));
    return $resultPromise;
}
